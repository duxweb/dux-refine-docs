{"version":3,"sources":["../../src/node/vitePlugin.ts","../../src/node/plugin-svgr/index.ts","../../src/node/plugin-island/config.ts","../../src/node/plugin-island/custom-ui.ts","../../src/node/plugin-island/indexHtml.ts","../../src/node/plugin-island/islandTransform.ts","../../src/node/babel-plugin-island.ts","../../src/node/plugin-island/siteDataPlugin.ts","../../src/node/plugin-island/index.ts","../../src/node/plugin-mdx/pluginMdxRollup.ts","../../src/node/plugin-mdx/rehypePlugins/preWrapper.ts","../../src/node/plugin-mdx/remarkPlugins/link.ts","../../src/node/utils.ts","../../src/node/plugin-mdx/remarkPlugins/toc.ts","../../src/node/plugin-mdx/remarkPlugins/tip.ts","../../src/node/plugin-mdx/rehypePlugins/shiki.ts","../../src/node/plugin-mdx/rehypePlugins/lineNumbers.ts","../../src/node/plugin-mdx/pluginMdxHmr.ts","../../src/node/plugin-mdx/pluginMdxLastUpdated.ts","../../src/node/plugin-mdx/pluginMdxRawContent.ts","../../src/node/plugin-mdx/index.ts","../../src/node/unocss.config.ts"],"sourcesContent":["import type { PluginOption } from 'vite';\nimport pluginReact from '@vitejs/plugin-react';\nimport { pluginSvgr } from './plugin-svgr';\nimport { pluginIsland } from './plugin-island';\nimport { pluginRoutes } from './plugin-routes';\nimport { SiteConfig } from '../shared/types';\nimport { pluginMdx } from './plugin-mdx';\nimport babelPluginIsland from './babel-plugin-island';\nimport { ISLAND_JSX_RUNTIME_PATH } from './constants/index';\nimport pluginUnocss from 'unocss/vite';\nimport unocssOptions from './unocss.config';\n\nexport async function createVitePlugins(\n  config: SiteConfig,\n  isServer = false,\n  restartServer?: () => Promise<void>\n): Promise<PluginOption[]> {\n  const pluginsFromIslandPlugins = config.plugins\n    ?.map((item) => item.vite)\n    .filter(Boolean)\n    .map((item) => item?.plugins || [])\n    .flat();\n  return [\n    pluginUnocss(unocssOptions),\n    // Md(x) compile\n    await pluginMdx(config, isServer),\n    // For island internal use\n    pluginIsland(config, isServer, restartServer),\n\n    // React hmr support\n    // In ssr, we will compile .tsx in islandTransform plugin\n    isServer && !config.enableSpa\n      ? []\n      : pluginReact({\n          jsxRuntime: 'automatic',\n          jsxImportSource:\n            isServer && !config.enableSpa ? ISLAND_JSX_RUNTIME_PATH : 'react',\n          babel: {\n            ...(config.babel || {}),\n            // Babel plugin for island(mpa) mode\n            plugins: [\n              ...(config.enableSpa ? [] : [babelPluginIsland]),\n              ...(config.babel?.plugins || [])\n            ]\n          }\n        }),\n    // Svg component support\n    pluginSvgr(),\n    // Conventional Route\n    pluginRoutes({\n      prefix: config.base ?? '/',\n      root: config.root,\n      ...config.route\n    }),\n    ...(pluginsFromIslandPlugins || [])\n  ];\n}\n","import { Plugin } from 'vite';\nimport * as fs from 'fs';\n\ninterface SvgrOptions {\n  defaultExport?: 'url' | 'component';\n}\n\nexport function pluginSvgr(options: SvgrOptions = {}): Plugin {\n  const { defaultExport = 'component' } = options;\n\n  return {\n    name: 'island:vite-plugin-svgr',\n    async transform(code, id) {\n      if (!id.endsWith('.svg')) {\n        return code;\n      }\n      const svgrTransform = await (await import('@svgr/core')).transform;\n      const esbuild = await import('esbuild');\n      const svg = await fs.promises.readFile(id, 'utf8');\n      const svgrResult = await svgrTransform(\n        svg,\n        {},\n        { componentName: 'ReactComponent' }\n      );\n      let componentCode = svgrResult;\n      if (defaultExport === 'url') {\n        componentCode = svgrResult.replace(\n          'export default ReactComponent',\n          'export { ReactComponent }'\n        );\n        componentCode += code;\n      }\n      const result = await esbuild.transform(componentCode, {\n        loader: 'jsx'\n      });\n      return result.code;\n    }\n  };\n}\n","import {\n  CLIENT_EXPORTS_PATH,\n  CLIENT_RUNTIME_PATH,\n  DEFAULT_EXTERNALS,\n  DEFAULT_THEME_PATH,\n  ISLAND_CLI_PATH,\n  ISLAND_JSX_RUNTIME_PATH,\n  isProduction,\n  PUBLIC_DIR,\n  SHARED_PATH\n} from '../constants';\nimport { Plugin, UserConfig } from 'vite';\nimport { SiteConfig } from 'shared/types/index';\nimport { join, relative } from 'path';\nimport pc from 'picocolors';\nimport { mergeConfig } from 'vite';\nimport { PACKAGE_ROOT_PATH } from '../constants/index';\nimport sirv from 'sirv';\nimport path from 'path';\nimport fs from 'fs-extra';\n\nconst { green } = pc;\n\nexport function pluginConfig(\n  config: SiteConfig,\n  restartServer?: () => Promise<void>\n): Plugin {\n  const getComposedPluginConfig = (key: 'alias' | 'define' | 'vite') => {\n    return config.plugins\n      ?.map((plugin) => plugin[key])\n      .filter(Boolean)\n      .reduce((acc, cur) => {\n        return mergeConfig(acc as UserConfig, cur as UserConfig);\n      }, {});\n  };\n  const pluginAlias = getComposedPluginConfig('alias');\n  const pluginDefine = getComposedPluginConfig('define');\n  const pluginViteConfig = getComposedPluginConfig('vite');\n  return {\n    name: 'island:vite-config',\n    enforce: 'pre',\n    // Set external\n    async resolveId(id) {\n      if (isProduction() && DEFAULT_EXTERNALS.includes(id)) {\n        return {\n          id,\n          external: true\n        };\n      }\n    },\n    config() {\n      return mergeConfig(\n        {\n          root: PACKAGE_ROOT_PATH,\n          esbuild: {\n            jsx: 'preserve'\n          },\n          optimizeDeps: {\n            include: [\n              'react',\n              'react-dom',\n              'react-dom/client',\n              'react-router-dom',\n              'react/jsx-runtime',\n              'react-helmet-async',\n              'lodash-es',\n              'copy-to-clipboard',\n              'medium-zoom',\n              'body-scroll-lock',\n              'nprogress'\n            ],\n            exclude: [\n              'islandjs',\n              '@theme',\n              '@runtime',\n              '@shared',\n              'island/routes',\n              'island/jsx-runtime'\n            ]\n          },\n          server: {\n            fs: {\n              allow: [\n                CLIENT_RUNTIME_PATH,\n                DEFAULT_THEME_PATH,\n                SHARED_PATH,\n                process.cwd()\n              ]\n            }\n          },\n          resolve: {\n            alias: {\n              '@theme': config.themeDir!,\n              '@runtime': `${CLIENT_EXPORTS_PATH}`,\n              '@shared': `${SHARED_PATH}`,\n              'island/jsx-runtime': join(\n                ISLAND_JSX_RUNTIME_PATH,\n                'jsx-runtime.js'\n              ),\n              '@theme-default': DEFAULT_THEME_PATH,\n              ...pluginAlias\n            }\n          },\n          define: {\n            'import.meta.env.ENABLE_SPA': config.enableSpa,\n            ...pluginDefine\n          },\n          css: {\n            modules: {\n              localsConvention: 'camelCaseOnly'\n            }\n          }\n        } as UserConfig,\n        mergeConfig(config.vite ?? {}, pluginViteConfig ?? {})\n      );\n    },\n    // Restart when config file changes\n    async handleHotUpdate(ctx) {\n      const watchFilesFromPlugins = config.plugins\n        ?.map((plugin) => plugin.watchFiles)\n        .flat() as string[];\n      const customWatchedFiles = [\n        ISLAND_CLI_PATH,\n        config.configPath,\n        ...(config.configDeps || []),\n        ...(watchFilesFromPlugins || [])\n      ].filter(Boolean) as string[];\n      const include = (id: string) => {\n        return customWatchedFiles.some((file) => id.includes(file));\n      };\n      if (include(ctx.file)) {\n        console.log(\n          green(\n            `\\n${relative(config.root, ctx.file)} changed, restarting server...`\n          )\n        );\n        // `restartServer` always exist in current plugin hook\n        await restartServer!();\n        return [];\n      }\n    },\n    configureServer(server) {\n      // Serve public dir\n      // Cause by the pre-bundle problem, we have to set the island package as the root dir\n      // So we need to serve the public dir in user's root dir manually\n      const publicDir = path.join(config.root, PUBLIC_DIR);\n      if (fs.pathExistsSync(publicDir)) {\n        server.middlewares.use(sirv(publicDir));\n      }\n      server.middlewares.use(sirv(config.root));\n    }\n  };\n}\n","import { CUSTOM_GLOBAL_STYLE, CUSTOM_UI_COMPONENTS } from '../constants';\nimport { Plugin, normalizePath } from 'vite';\nimport { join } from 'path';\nimport fs from 'fs-extra';\nimport { SiteConfig } from 'shared/types';\n\n// 1. custom global style\n// 2. custom global components\nexport function pluginCustomUI(config: SiteConfig): Plugin {\n  return {\n    name: 'island:custom-ui',\n    resolveId(id) {\n      if (id === CUSTOM_GLOBAL_STYLE) {\n        return `\\0${CUSTOM_GLOBAL_STYLE}`;\n      }\n\n      if (id === CUSTOM_UI_COMPONENTS) {\n        return `\\0${CUSTOM_UI_COMPONENTS}`;\n      }\n    },\n    async load(id) {\n      if (id === `\\0${CUSTOM_GLOBAL_STYLE}`) {\n        const stylePath = join(config.root!, '.island', 'styles', 'index.css');\n        const styles =\n          [stylePath]\n            .concat(\n              config.plugins?.map((plugin) => plugin.globalStyles || '') || []\n            )\n            .filter((pluginStylePath) => {\n              return pluginStylePath && fs.existsSync(pluginStylePath);\n            }) || [];\n\n        return styles\n          .map((style) => `import '${normalizePath(style)}';`)\n          .join('\\n');\n      }\n      // TODO: support island component in global ui component\n      // if (id === `\\0${CUSTOM_UI_COMPONENTS}`) {\n      //   const components = config.plugins\n      //     ?.map((plugin) => plugin.globalUIComponents)\n      //     .flat()\n      //     .filter(Boolean);\n      //   const code = `${components\n      //     ?.map(\n      //       (component, index) => `import Comp_${index} from '${component}';`\n      //     )\n      //     .join('\\n')}\n      //     export default [\n      //       ${\n      //         components\n      //           ? components.map((_, index) => `Comp_${index}`).join(',')\n      //           : ''\n      //       }\n      //     ]\n      //   `;\n      //   return code;\n      // }\n    }\n  };\n}\n","import {\n  CLIENT_ENTRY_PATH,\n  DEFAULT_HTML_PATH,\n  ISLAND_CLI_PATH\n} from '../constants';\nimport { SiteConfig } from 'shared/types/index';\nimport { Plugin } from 'vite';\nimport fs from 'fs-extra';\nimport { join } from 'path';\n\nexport function pluginIndexHtml(config: SiteConfig): Plugin {\n  return {\n    name: 'island:index-html',\n    apply: 'serve',\n    transformIndexHtml(html) {\n      // Insert client entry script in development\n      // And in production, we will insert it in ssr render\n      const head =\n        config.siteData?.head?.map((item) => {\n          const [tag, attrs, children] = item;\n          return {\n            tag,\n            attrs,\n            children\n          };\n        }) ?? [];\n      return {\n        html,\n        tags: [\n          ...head,\n          {\n            tag: 'link',\n            attrs: {\n              rel: 'icon',\n              href: `${config.siteData?.icon}`,\n              type: 'image/image/svg+xml'\n            },\n            injectTo: 'head'\n          },\n          {\n            tag: 'script',\n            attrs: {\n              type: 'module',\n              src: `/@fs/${CLIENT_ENTRY_PATH}`\n            },\n            injectTo: 'body'\n          }\n        ]\n      };\n    },\n    configureServer(server) {\n      if (config.configPath) {\n        server.watcher.add(config.configPath);\n        config.configDeps?.forEach((dep) => {\n          server.watcher.add(dep);\n        });\n      }\n      const watchFilesFromPlugins = config.plugins\n        ?.map((plugin) => plugin.watchFiles)\n        .filter(Boolean)\n        .flat();\n      server.watcher.add([\n        ISLAND_CLI_PATH,\n        ...(watchFilesFromPlugins as string[])\n      ]);\n      return () => {\n        server.middlewares.use(async (req, res, next) => {\n          if (res.writableEnded) {\n            return next();\n          }\n          const indexHtmlInRoot = join(config.root, '.island', 'index.html');\n          const templatePath = (await fs.pathExists(indexHtmlInRoot))\n            ? indexHtmlInRoot\n            : DEFAULT_HTML_PATH;\n          if (req.url?.replace(/\\?.*/, '')) {\n            let html = fs.readFileSync(templatePath, 'utf8');\n\n            try {\n              html = await server.transformIndexHtml(\n                req.url,\n                html,\n                req.originalUrl\n              );\n              res.statusCode = 200;\n              res.setHeader('Content-Type', 'text/html');\n              res.end(html);\n            } catch (e) {\n              return next(e);\n            }\n          }\n        });\n      };\n    }\n  };\n}\n","import { ISLAND_JSX_RUNTIME_PATH, TS_REGEX } from '../constants';\nimport { Plugin, transformWithEsbuild } from 'vite';\nimport { transformAsync } from '@babel/core';\nimport babelPluginIsland from '../babel-plugin-island';\nimport { SiteConfig } from 'shared/types/index';\nimport { MD_REGEX } from '../constants/index';\n\nexport function pluginIslandTransform(\n  config: SiteConfig,\n  isServer: boolean\n): Plugin {\n  return {\n    name: 'island:vite-plugin-internal',\n    async transform(code, id, options) {\n      // Note: @vitejs/plugin-react cannot compile files in node_modules, so we need to compile them manually.\n      // In production, we should transform the __island props for collecting island components\n      if (\n        options?.ssr &&\n        (TS_REGEX.test(id) || MD_REGEX.test(id)) &&\n        !config.enableSpa\n      ) {\n        const strippedTypes = await transformWithEsbuild(code, id, {\n          jsx: 'preserve',\n          loader: 'tsx'\n        });\n\n        const result = await transformAsync((await strippedTypes).code, {\n          filename: id,\n          presets: [\n            [\n              '@babel/preset-react',\n              {\n                runtime: 'automatic',\n                importSource: isServer ? ISLAND_JSX_RUNTIME_PATH : 'react'\n              }\n            ],\n            ...(config.babel?.presets || [])\n          ],\n          plugins: [babelPluginIsland, ...(config.babel?.plugins || [])]\n        });\n        return {\n          code: result?.code || code,\n          map: result?.map\n        };\n      }\n    }\n  };\n}\n","/**\n * This adds component source path to JSX tags.\n *\n * == JSX Literals ==\n *\n * <sometag __island />\n *\n * becomes:\n *\n * <sometag __island=\"../comp/id.ts!!ISLAND!!/User/import.ts\" />\n */\nimport { declare } from '@babel/helper-plugin-utils';\nimport { type PluginPass, types as t } from '@babel/core';\nimport type { Visitor } from '@babel/traverse';\nimport {} from 'vite';\nimport { MASK_SPLITTER } from './constants';\nimport { normalizePath } from 'vite';\n\nconst ID = '__island';\n\nexport default declare((api) => {\n  api.assertVersion(7);\n\n  const visitor: Visitor<PluginPass> = {\n    JSXOpeningElement(path, state) {\n      const name = path.node.name;\n      let bindingName: string;\n      if (t.isJSXIdentifier(name)) {\n        bindingName = name.name;\n      } else if (t.isJSXMemberExpression(name)) {\n        let object = name.object;\n        while (t.isJSXMemberExpression(object)) {\n          object = object.object;\n        }\n        bindingName = object.name;\n      } else if (t.isJSXNamespacedName(name)) {\n        bindingName = name.namespace.name;\n      } else {\n        return;\n      }\n\n      const binding = path.scope.getBinding(bindingName);\n      if (binding?.path.parent.type === 'ImportDeclaration') {\n        const source = (binding?.path.parent as t.ImportDeclaration).source;\n        const attributes = (path.container as t.JSXElement).openingElement\n          .attributes;\n        for (let i = 0; i < attributes.length; i++) {\n          const name = (attributes[i] as t.JSXAttribute).name;\n          if (name?.name === ID) {\n            (attributes[i] as t.JSXAttribute).value = t.stringLiteral(\n              `${source.value}${MASK_SPLITTER}${normalizePath(\n                state.filename || ''\n              )}`\n            );\n          }\n        }\n      }\n    }\n  };\n\n  return {\n    name: 'transform-react-jsx-island',\n    visitor\n  };\n});\n","import { DEFAULT_EXTERNALS, isProduction } from '../constants';\nimport { SiteConfig } from 'shared/types';\nimport { Plugin } from 'vite';\n\nexport const SITE_DATA_ID = 'island:site-data';\n\nexport const BASE_URL = 'island:base';\n\nexport function pluginSiteData(config: SiteConfig): Plugin {\n  const { siteData } = config;\n  return {\n    name: 'island:site-data',\n    async resolveId(id) {\n      if (id === SITE_DATA_ID) {\n        return '\\0' + SITE_DATA_ID;\n      }\n      if (id === BASE_URL) {\n        return '\\0' + BASE_URL;\n      }\n      if (isProduction() && DEFAULT_EXTERNALS.includes(id)) {\n        return {\n          id,\n          external: true\n        };\n      }\n    },\n    load(id) {\n      if (id === '\\0' + SITE_DATA_ID) {\n        return `export default ${JSON.stringify(siteData)}`;\n      }\n      if (id === '\\0' + BASE_URL) {\n        return `export default ${JSON.stringify(siteData?.base || '/')}`;\n      }\n    }\n  };\n}\n","import { SiteConfig } from 'shared/types';\nimport type { Plugin } from 'vite';\nimport { pluginConfig } from './config';\nimport { pluginCustomUI } from './custom-ui';\nimport { pluginIndexHtml } from './indexHtml';\nimport { pluginIslandTransform } from './islandTransform';\nimport { pluginSiteData } from './siteDataPlugin';\n\nexport function pluginIsland(\n  config: SiteConfig,\n  isServer = false,\n  restartServer?: () => Promise<void>\n): Plugin[] {\n  return [\n    pluginSiteData(config),\n    pluginConfig(config, restartServer),\n    pluginIndexHtml(config),\n    pluginIslandTransform(config, isServer),\n    pluginCustomUI(config)\n  ];\n}\n","import pluginMdx from '@mdx-js/rollup';\nimport { rehypePluginPreWrapper } from './rehypePlugins/preWrapper';\nimport remarkPluginGFM from 'remark-gfm';\nimport remarkPluginFrontMatter from 'remark-frontmatter';\nimport remarkDirective from 'remark-directive';\nimport remarkPluginMDXFrontMatter from 'remark-mdx-frontmatter';\nimport remarkGemoji from 'remark-gemoji';\nimport { remarkPluginNormalizeLink } from './remarkPlugins/link';\nimport rehypePluginAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypePluginSlug from 'rehype-slug';\nimport rehypePluginExternalLinks, { Element } from 'rehype-external-links';\nimport { remarkPluginToc } from './remarkPlugins/toc';\nimport { remarkPluginTip } from './remarkPlugins/tip';\nimport shiki from 'shiki';\nimport { rehypePluginShiki } from './rehypePlugins/shiki';\nimport { rehypePluginLineNumbers } from './rehypePlugins/lineNumbers';\nimport { Plugin } from 'vite';\nimport { TARGET_BLANK_WHITE_LIST } from '../../shared/constants';\nimport { SiteConfig } from '@shared/types/index';\n\nexport async function pluginMdxRollup(\n  config: SiteConfig,\n  isServer: boolean\n): Promise<Plugin> {\n  const plugins = config.plugins || [];\n  return pluginMdx({\n    // We should reserve the jsx in ssr build\n    // to ensure the island components can be collected by `babel-plugin-island`\n    jsx: isServer && !config.enableSpa,\n    remarkPlugins: [\n      remarkPluginGFM,\n      // The following two plugin for frontmatter\n      remarkPluginFrontMatter,\n      [remarkPluginMDXFrontMatter, { name: 'frontmatter' }],\n      remarkGemoji,\n      remarkPluginToc,\n      remarkDirective,\n      remarkPluginTip,\n      [\n        remarkPluginNormalizeLink,\n        { base: config.base || '/', enableSpa: config.enableSpa }\n      ],\n      ...(config.markdown?.remarkPlugins || []),\n      ...plugins.map((plugin) => plugin.markdown?.remarkPlugins || []).flat()\n    ],\n    rehypePlugins: [\n      rehypePluginSlug,\n      [\n        rehypePluginAutolinkHeadings,\n        {\n          properties: {\n            class: 'header-anchor',\n            ariaHidden: 'true'\n          },\n          content: {\n            type: 'text',\n            value: '#'\n          }\n        }\n      ],\n      [\n        // Open new window then click external link\n        rehypePluginExternalLinks,\n        {\n          target: (node: Element) => {\n            const href = node.properties?.href;\n            const whiteList = [\n              ...TARGET_BLANK_WHITE_LIST,\n              ...(config.markdown?.targetBlankWhiteList ?? [])\n            ];\n            if (typeof href === 'string') {\n              const inWhiteList = whiteList.some((item) => {\n                if (item instanceof RegExp) return item.test(href);\n                else return href.startsWith(item);\n              });\n              return inWhiteList ? '_self' : '_blank';\n            }\n          }\n        }\n      ],\n      [\n        rehypePluginShiki,\n        {\n          highlighter: await shiki.getHighlighter({ theme: 'nord' })\n        }\n      ],\n      rehypePluginPreWrapper,\n      ...(config.markdown?.lineNumbers ? [rehypePluginLineNumbers] : []),\n      ...(config.markdown?.rehypePlugins || []),\n      ...plugins.map((plugin) => plugin.markdown?.rehypePlugins || []).flat()\n    ]\n  }) as Plugin;\n}\n","import { visit } from 'unist-util-visit';\nimport type { Plugin } from 'unified';\nimport type { Element } from 'hast';\n\n// https://github.com/rehypejs/rehype\nexport const rehypePluginPreWrapper: Plugin<[], import('hast').Root> = () => {\n  return (tree) => {\n    visit(tree, 'element', (node) => {\n      // <pre><code>...</code></pre>\n      if (\n        node.tagName === 'pre' &&\n        node.children[0].type === 'element' &&\n        node.children[0].tagName === 'code' &&\n        !node.data?.isVisited\n      ) {\n        const codeNode = node.children[0];\n        const codeClassName = codeNode.properties?.className?.toString() || '';\n        const lang = codeClassName.split('-')[1];\n        if (!codeClassName || !lang) {\n          return;\n        }\n        codeNode.properties!.className = '';\n        const shallowClonedNode: Element = {\n          type: 'element',\n          tagName: 'pre',\n          // Attach a flag to prevent infinite recursion\n          data: {\n            isVisited: true\n          },\n          children: node.children\n        };\n\n        node.tagName = 'div';\n        node.properties = node.properties || {};\n        node.properties.className = codeClassName;\n        node.children = [\n          {\n            type: 'element',\n            tagName: 'button',\n            properties: {\n              className: 'copy'\n            },\n            children: [\n              {\n                type: 'text',\n                value: ''\n              }\n            ]\n          },\n          {\n            type: 'element',\n            tagName: 'span',\n            properties: {\n              className: 'lang'\n            },\n            children: [\n              {\n                type: 'text',\n                value: lang\n              }\n            ]\n          },\n          shallowClonedNode\n        ];\n      }\n    });\n  };\n};\n","import type { Plugin } from 'unified';\nimport { visit } from 'unist-util-visit';\nimport path from 'path';\nimport { isProduction } from '../../constants';\nimport { parseUrl } from '../../utils';\n\ninterface LinkNode {\n  type: string;\n  url?: string;\n}\n\n/**\n * Remark plugin to normalize a link href\n */\nexport const remarkPluginNormalizeLink: Plugin<\n  [{ base: string; enableSpa: boolean }]\n> =\n  ({ base, enableSpa }) =>\n  (tree) => {\n    visit(\n      tree,\n      (node: LinkNode) => node.type === 'link',\n      (node: LinkNode) => {\n        if (\n          !node.url ||\n          node.url.startsWith('http') ||\n          node.url.startsWith('#')\n        ) {\n          return;\n        }\n        // eslint-disable-next-line prefer-const\n        let { url, hash } = parseUrl(node.url);\n        const extname = path.extname(url);\n\n        if (extname === '.md' || extname === '.mdx') {\n          url = url.replace(extname, '');\n        }\n\n        if (isProduction() && !enableSpa && extname !== '.html') {\n          url += '.html';\n        }\n        if (hash) {\n          url += `#${hash}`;\n        }\n        node.url = path.join(base, url);\n      }\n    );\n  };\n","import { createHash as createHashFunc } from 'crypto';\n\nexport const dynamicImport = new Function(\n  'modulePath',\n  'return import(modulePath)'\n);\n\nexport const createHash = (info: string): string => {\n  if (!info) {\n    throw new Error(`Invalid info: ${info}`);\n  }\n  return createHashFunc('sha256').update(info).digest('hex').slice(0, 8);\n};\n\nexport const parseUrl = (\n  url: string\n): {\n  url: string;\n  query: string;\n  hash: string;\n} => {\n  const [withoutHash, hash = ''] = url.split('#');\n  const [cleanedUrl, query = ''] = withoutHash.split('?');\n  return {\n    url: cleanedUrl,\n    query,\n    hash\n  };\n};\n","import type { Plugin } from 'unified';\nimport { visitChildren } from 'unist-util-visit-children';\nimport { parse } from 'acorn';\nimport Slugger from 'github-slugger';\nimport type { Root } from 'hast';\nimport type { MdxjsEsm, Program } from 'mdast-util-mdxjs-esm';\n\nconst slugger = new Slugger();\n\ninterface TocItem {\n  id: string;\n  text: string;\n  depth: number;\n}\n\ninterface ChildNode {\n  type: 'link' | 'text' | 'inlineCode' | 'emphasis' | 'strong';\n  value: string;\n  children?: ChildNode[];\n}\n\ninterface Heading {\n  type: string;\n  depth?: number;\n  children?: ChildNode[];\n}\n\nexport const remarkPluginToc: Plugin<[], Root> = () => {\n  return (tree: Root) => {\n    const toc: TocItem[] = [];\n    let title = '';\n    slugger.reset();\n    visitChildren((node: Heading) => {\n      if (node.type !== 'heading' || !node.depth || !node.children) {\n        return;\n      }\n      // Collect h2 ~ h5\n      if (node.depth === 1) {\n        title = node.children[0].value;\n      }\n\n      if (node.depth > 1 && node.depth < 5) {\n        const originText = node.children\n          .map((child: ChildNode) => {\n            switch (child.type) {\n              // child with value\n              case 'text':\n              case 'inlineCode':\n                return child.value;\n\n              // child without value, but can get value from children property\n              case 'emphasis':\n              case 'strong':\n              case 'link':\n                return child.children?.map((c) => c.value).join('') || '';\n\n              // child without value and can not get value from children property\n              default:\n                return '';\n            }\n          })\n          .join('');\n        const id = slugger.slug(originText);\n        const depth = node.depth;\n        toc.push({ id, text: originText, depth });\n      }\n    })(tree);\n    const insertedTocCode = `export const toc = ${JSON.stringify(\n      toc,\n      null,\n      2\n    )}`;\n    // Add toc ast to current ast tree\n    tree.children.push({\n      type: 'mdxjsEsm',\n      value: insertedTocCode,\n      data: {\n        estree: parse(insertedTocCode, {\n          ecmaVersion: 2020,\n          sourceType: 'module'\n        }) as unknown as Program\n      }\n    } as MdxjsEsm);\n\n    if (title) {\n      const insertedTitle = `export const title = \"${title}\"`;\n      tree.children.push({\n        type: 'mdxjsEsm',\n        value: insertedTitle,\n        data: {\n          estree: {\n            type: 'Program',\n            sourceType: 'module',\n            body: [\n              {\n                type: 'ExportNamedDeclaration',\n                declaration: {\n                  type: 'VariableDeclaration',\n                  kind: 'const',\n                  declarations: [\n                    {\n                      type: 'VariableDeclarator',\n                      id: {\n                        type: 'Identifier',\n                        name: 'title'\n                      },\n                      init: {\n                        type: 'Literal',\n                        value: title,\n                        raw: `\"${title}\"`\n                      }\n                    }\n                  ]\n                },\n                specifiers: []\n              }\n            ]\n          }\n        }\n      } as MdxjsEsm);\n    }\n  };\n};\n","import { DIRECTIVE_TYPES } from '../../constants';\nimport type { Plugin } from 'unified';\nimport { visit } from 'unist-util-visit';\nimport { Root, Node } from 'hast';\n\ninterface DirectiveNode {\n  type: string;\n  name?: string;\n  attributes?: {\n    title?: string;\n  };\n  data?: unknown;\n  children?: Node[];\n}\n\ninterface InitialData {\n  hName?: string;\n  hProperties?: Record<string, string>;\n}\n\nexport const remarkPluginTip: Plugin<[], Root> = () => {\n  return (tree: Root) => {\n    visit(tree, (node: DirectiveNode) => {\n      if (node.type !== 'containerDirective' || !node.name) {\n        return;\n      }\n      const name = DIRECTIVE_TYPES.includes(node.name)\n        ? node.name\n        : DIRECTIVE_TYPES[0];\n      const customTitle = node.attributes?.title;\n      const data: InitialData = node.data || (node.data = {});\n      const children = node.children;\n\n      data.hName = 'div';\n      data.hProperties = {\n        class: `island-directive ${name}`\n      };\n\n      node.children = [\n        {\n          type: 'paragraph',\n          data: {\n            hProperties: {\n              class: 'island-directive-title'\n            }\n          },\n          children: [\n            { type: 'text', value: customTitle ?? name.toLocaleUpperCase() }\n          ]\n        },\n        {\n          type: 'element',\n          data: {\n            hProperties: { class: 'island-directive-content' }\n          },\n          children\n        }\n      ] as unknown as Node[];\n    });\n  };\n};\n","import { visit } from 'unist-util-visit';\nimport type { Plugin } from 'unified';\nimport type { Text } from 'hast';\nimport { fromHtml } from 'hast-util-from-html';\nimport shiki from 'shiki';\n\ninterface Options {\n  highlighter: shiki.Highlighter;\n}\n\nfunction highlightSingleLine(\n  line: number,\n  fragmentAst: ReturnType<typeof fromHtml>\n) {\n  // Children are composed of span and \\n alternately, so we should get the even rows to highlight\n  // @ts-expect-error The type problem of hast-util-from-html\n  const codeLines = fragmentAst.children[0].children[0].children;\n  const targetIndex = (line - 1) * 2;\n  if (line < 1 || !codeLines?.length || targetIndex >= codeLines.length) return;\n  codeLines[targetIndex].properties.className = 'line highlighted';\n}\n\n// https://github.com/leafac/rehype-shiki/blob/41e64054d72ab29d5ad48c4c070499fc075090e9/source/index.ts\n// The plugin cannot be used directly because it won't reserve the class name `language-xxx` in the code tag\n// It cause conflict with preWrapper plugin, so we should integrate it manually\nexport const rehypePluginShiki: Plugin<[Options], import('hast').Root> = ({\n  highlighter\n}) => {\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      // <pre><code>...</code></pre>\n      if (\n        node.tagName === 'pre' &&\n        node.children?.[0]?.type === 'element' &&\n        node.children[0].tagName === 'code'\n      ) {\n        const codeNode = node.children[0];\n        const codeContent = (node.children[0].children[0] as Text).value;\n        const codeClassName = codeNode.properties?.className?.toString() || '';\n\n        const highlightLinesReg = /language-([a-zA-Z]*)\\s*({[\\d,-]*})?/i;\n        const highlightRegExecResult = highlightLinesReg.exec(codeClassName);\n\n        if (!highlightRegExecResult) {\n          return;\n        }\n\n        const lang = highlightRegExecResult[1];\n        if (!lang) {\n          return;\n        }\n\n        // Support single line and line range\n        const highlightLines: number[] = [];\n        highlightRegExecResult[2]\n          ?.slice(1, highlightRegExecResult[2].length - 1)\n          ?.split(',')\n          .forEach((str) => {\n            if (str.includes('-')) {\n              const [start, end] = str.split('-');\n              // 3,5 -> [3, 4, 5]\n              highlightLines.push(\n                ...Array(Number(end) - Number(start) + 1)\n                  .fill(0)\n                  .map((_, i) => Number(start) + i)\n              );\n            } else {\n              highlightLines.push(Number(str));\n            }\n          });\n\n        const highlightedCode = highlighter.codeToHtml(codeContent, { lang });\n        const fragmentAst = fromHtml(highlightedCode, { fragment: true });\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore Reserve the class name `language-xxx` in the code tag\n        fragmentAst.children[0].children[0].properties.className =\n          'language-' + lang;\n\n        highlightLines.forEach((line) =>\n          highlightSingleLine(line, fragmentAst)\n        );\n        parent?.children.splice(index!, 1, ...fragmentAst.children);\n      }\n    });\n  };\n};\n","import { visit } from 'unist-util-visit';\nimport { Root, Element } from 'hast';\nimport { Plugin } from 'unified';\n\nexport const rehypePluginLineNumbers: Plugin<[], Root> = () => {\n  return (tree) => {\n    visit(\n      tree,\n      'element',\n      (node: Element, _index, parent: Root | Element | null) => {\n        // after preWrapperPlugin, <div class=\"language-xxx\"><pre><code></code></pre></div>\n        if (\n          node.tagName === 'pre' &&\n          node.children?.[0]?.type === 'element' &&\n          node.children[0].tagName === 'code' &&\n          parent\n        ) {\n          if ('properties' in parent) {\n            const parentClassName =\n              parent?.properties?.className?.toString() || '';\n            parent.properties = parent.properties || {};\n            parent.properties.className = `${parentClassName} line-numbers-mode`;\n          }\n\n          const codeContent = node.children[0].children.filter(\n            (item) => item.type === 'text'\n          );\n          const lineNumbersCode: Element = {\n            type: 'element',\n            tagName: 'div',\n            properties: {\n              className: 'line-numbers-wrapper'\n            },\n            children: [...Array(codeContent.length)].map((line, index) => ({\n              type: 'element',\n              tagName: 'span',\n              properties: {\n                className: 'line-number'\n              },\n              children: [\n                {\n                  type: 'text',\n                  value: String(index + 1)\n                }\n              ]\n            }))\n          };\n          const children = parent.children;\n          parent.children = [...children, lineNumbersCode];\n        }\n      }\n    );\n  };\n};\n","import { MD_REGEX } from '../constants';\nimport { Plugin } from 'vite';\nimport { RouteService } from '../plugin-routes/RouteService';\nimport { SiteConfig } from 'shared/types/index';\nimport assert from 'assert';\n\nexport function pluginMdxHMR(config: SiteConfig): Plugin {\n  let viteReactPlugin: Plugin;\n  return {\n    name: 'vite-plugin-mdx-hmr',\n    apply: 'serve',\n    configResolved(config) {\n      viteReactPlugin = config.plugins.find(\n        (plugin) => plugin.name === 'vite:react-babel'\n      ) as Plugin;\n    },\n    async transform(code, id, opts) {\n      if (MD_REGEX.test(id)) {\n        viteReactPlugin.transform;\n        // Inject babel refresh template code by @vitejs/plugin-react\n        assert(typeof viteReactPlugin.transform === 'function');\n        const result = await viteReactPlugin.transform?.call(\n          this,\n          code,\n          id + '?.jsx',\n          opts\n        );\n        const selfAcceptCode = 'import.meta.hot.accept();';\n        if (\n          typeof result === 'object' &&\n          !result!.code?.includes(selfAcceptCode)\n        ) {\n          result!.code += selfAcceptCode;\n        }\n        return result;\n      }\n    },\n    handleHotUpdate(ctx) {\n      if (/\\.mdx?/.test(ctx.file)) {\n        const routePath = RouteService.getRoutePathFromFile(\n          ctx.file,\n          config.root,\n          config.base || '/'\n        );\n        ctx.server.ws!.send({\n          type: 'custom',\n          event: 'md(x)-changed',\n          data: {\n            filePath: ctx.file,\n            routePath\n          }\n        });\n      }\n    }\n  };\n}\n","import { Plugin } from 'vite';\nimport { GitError, simpleGit } from 'simple-git';\nimport { MD_REGEX } from '../constants';\nimport { cleanUrl } from '../../shared/utils';\nimport { now } from 'lodash-es';\n\nexport function pluginMdxGit(): Plugin {\n  const cache = new Map<string, string>();\n  const git = simpleGit();\n\n  // https://github.com/steveukx/git-js#git-log\n  async function getLastUpdatedTime(path: string) {\n    try {\n      const { latest } = await git.log({ file: path });\n      return !latest ? '' : latest.date;\n    } catch (e) {\n      console.log((e as GitError)?.message);\n      return now();\n    }\n  }\n\n  return <Plugin>{\n    name: 'vite-plugin-mdx-last-update',\n    async transform(code, id) {\n      id = cleanUrl(id);\n      if (!MD_REGEX.test(id)) return code;\n\n      let lastUpdatedTime = '';\n      if (cache.has(id)) {\n        // Use cache to avoid unnecessary git command execution\n        lastUpdatedTime = cache.get(id)!;\n      } else {\n        const rawTime = await getLastUpdatedTime(id);\n        lastUpdatedTime = new Date(rawTime).toLocaleString('zh-CN');\n        cache.set(id, lastUpdatedTime);\n      }\n\n      code = code.concat(`\n        \\n\nexport const lastUpdatedTime = \"${lastUpdatedTime}\"\n      `);\n      return code;\n    }\n  };\n}\n","import { Plugin } from 'vite';\nimport fs from 'fs-extra';\nimport { MD_REGEX } from '../constants';\nimport { cleanUrl } from '../../shared/utils';\n\nexport function pluginMdxRawContent(): Plugin {\n  return <Plugin>{\n    name: 'vite-plugin-mdx-raw-content',\n    async transform(code, id) {\n      id = cleanUrl(id);\n      if (!MD_REGEX.test(id)) return code;\n      const rawContent = await fs.readFile(id, 'utf-8');\n      code = code.concat(`\n        \\n\nexport const content = ${JSON.stringify(rawContent)}\n      `);\n      return code;\n    }\n  };\n}\n","import { Plugin } from 'vite';\nimport { pluginMdxRollup } from './pluginMdxRollup';\nimport { pluginMdxHMR } from './pluginMdxHmr';\nimport { pluginMdxGit } from './pluginMdxLastUpdated';\nimport { SiteConfig } from 'shared/types/index';\nimport { pluginMdxRawContent } from './pluginMdxRawContent';\n\nexport async function pluginMdx(\n  config: SiteConfig,\n  isServer: boolean\n): Promise<Plugin[]> {\n  return [\n    await pluginMdxRollup(config, isServer),\n    pluginMdxHMR(config),\n    pluginMdxGit(),\n    pluginMdxRawContent()\n  ];\n}\n","import { VitePluginConfig } from 'unocss/vite';\nimport presetWind from '@unocss/preset-wind';\nimport presetAttributify from '@unocss/preset-attributify';\nimport presetIcons from '@unocss/preset-icons';\n\nconst options: VitePluginConfig = {\n  presets: [presetAttributify(), presetWind({}), presetIcons()],\n  shortcuts: {\n    'flex-center': 'flex justify-center items-center',\n    menu: 'flex justify-around items-center text-sm font-bold'\n  },\n  rules: [\n    [\n      'border-1',\n      {\n        border: '1px solid var(--island-c-divider-light)'\n      }\n    ],\n    [\n      /^divider-(\\w+)$/,\n      ([, w]) => ({\n        [`border-${w}`]: '1px solid var(--island-c-divider-light)'\n      })\n    ],\n    [\n      /^nav-h-(\\w+)$/,\n      ([, w]) => ({\n        height: `var(--island-nav-height-${w})`\n      })\n    ],\n    [\n      'menu-item-before',\n      {\n        'margin-right': '12px',\n        'margin-left': '12px',\n        width: '1px',\n        height: '24px',\n        'background-color': 'var(--island-c-divider-light)',\n        content: '\" \"'\n      }\n    ],\n    [\n      'avoid-text-overflow',\n      {\n        'white-space': 'nowrap',\n        overflow: 'hidden',\n        'text-overflow': 'ellipsis'\n      }\n    ],\n    [\n      'multi-line-ellipsis',\n      {\n        overflow: 'hidden',\n        'text-overflow': 'ellipsis',\n        display: '-webkit-box',\n        'webkit-line-clamp': '2',\n        '-webkit-box-orient': 'vertical'\n      }\n    ]\n  ],\n  theme: {\n    fontSize: {\n      '6xl': ['3.5rem', '4rem']\n    },\n    breakpoints: {\n      xs: '640px',\n      sm: '768px',\n      md: '960px',\n      lg: '1280px'\n    },\n    colors: {\n      brandLight: 'var(--island-c-brand-light)',\n      brandDark: 'var(--island-c-brand-dark)',\n      brand: 'var(--island-c-brand)',\n      text: {\n        1: 'var(--island-c-text-1)',\n        2: 'var(--island-c-text-2)',\n        3: 'var(--island-c-text-3)',\n        4: 'var(--island-c-text-4)'\n      },\n      divider: {\n        default: 'var(--island-c-divider)',\n        light: 'var(--island-c-divider-light)',\n        dark: 'var(--island-c-divider-dark)'\n      },\n      gray: {\n        light: {\n          1: 'var(--island-c-gray-light-1)',\n          2: 'var(--island-c-gray-light-2)',\n          3: 'var(--island-c-gray-light-3)',\n          4: 'var(--island-c-gray-light-4)'\n        }\n      },\n      bg: {\n        default: 'var(--island-c-bg)',\n        soft: 'var(--island-c-bg-soft)',\n        mute: 'var(--island-c-bg-mute)'\n      }\n    }\n  }\n};\n\nexport default options;\n"],"mappings":"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","names":["pluginReact","fs","pluginSvgr","options","defaultExport","code","id","svgrTransform","esbuild","svg","svgrResult","componentCode","join","relative","pc","mergeConfig","sirv","path","fs","green","pc","pluginConfig","config","restartServer","getComposedPluginConfig","key","plugin","acc","cur","mergeConfig","pluginAlias","pluginDefine","pluginViteConfig","id","isProduction","DEFAULT_EXTERNALS","PACKAGE_ROOT_PATH","CLIENT_RUNTIME_PATH","DEFAULT_THEME_PATH","SHARED_PATH","CLIENT_EXPORTS_PATH","join","ISLAND_JSX_RUNTIME_PATH","ctx","watchFilesFromPlugins","customWatchedFiles","ISLAND_CLI_PATH","file","relative","server","publicDir","PUBLIC_DIR","normalizePath","join","fs","pluginCustomUI","config","id","CUSTOM_GLOBAL_STYLE","CUSTOM_UI_COMPONENTS","plugin","pluginStylePath","style","fs","join","pluginIndexHtml","config","html","head","item","tag","attrs","children","CLIENT_ENTRY_PATH","server","dep","watchFilesFromPlugins","plugin","ISLAND_CLI_PATH","req","res","next","indexHtmlInRoot","templatePath","DEFAULT_HTML_PATH","e","transformWithEsbuild","transformAsync","declare","t","normalizePath","ID","babel_plugin_island_default","declare","api","path","state","name","bindingName","t","object","binding","source","attributes","i","MASK_SPLITTER","pluginIslandTransform","config","isServer","code","id","options","TS_REGEX","MD_REGEX","strippedTypes","transformWithEsbuild","result","transformAsync","ISLAND_JSX_RUNTIME_PATH","babel_plugin_island_default","SITE_DATA_ID","BASE_URL","pluginSiteData","config","siteData","id","isProduction","DEFAULT_EXTERNALS","pluginIsland","config","isServer","restartServer","pluginSiteData","pluginConfig","pluginIndexHtml","pluginIslandTransform","pluginCustomUI","pluginMdx","visit","rehypePluginPreWrapper","tree","node","codeNode","codeClassName","lang","shallowClonedNode","remarkPluginGFM","remarkPluginFrontMatter","remarkDirective","remarkPluginMDXFrontMatter","remarkGemoji","visit","path","createHashFunc","dynamicImport","createHash","info","parseUrl","url","withoutHash","hash","cleanedUrl","query","remarkPluginNormalizeLink","base","enableSpa","tree","visit","node","url","hash","parseUrl","extname","path","isProduction","rehypePluginAutolinkHeadings","rehypePluginSlug","rehypePluginExternalLinks","visitChildren","parse","Slugger","slugger","remarkPluginToc","tree","toc","title","node","originText","child","c","id","depth","insertedTocCode","insertedTitle","visit","remarkPluginTip","tree","node","name","DIRECTIVE_TYPES","customTitle","data","children","shiki","visit","fromHtml","highlightSingleLine","line","fragmentAst","codeLines","targetIndex","rehypePluginShiki","highlighter","tree","node","index","parent","codeNode","codeContent","codeClassName","highlightRegExecResult","lang","highlightLines","str","start","end","_","i","highlightedCode","visit","rehypePluginLineNumbers","tree","node","_index","parent","parentClassName","codeContent","item","lineNumbersCode","line","index","children","pluginMdxRollup","config","isServer","plugins","pluginMdx","remarkPluginGFM","remarkPluginFrontMatter","remarkPluginMDXFrontMatter","remarkGemoji","remarkPluginToc","remarkDirective","remarkPluginTip","remarkPluginNormalizeLink","plugin","rehypePluginSlug","rehypePluginAutolinkHeadings","rehypePluginExternalLinks","node","href","whiteList","TARGET_BLANK_WHITE_LIST","item","rehypePluginShiki","shiki","rehypePluginPreWrapper","rehypePluginLineNumbers","assert","pluginMdxHMR","config","viteReactPlugin","plugin","code","id","opts","MD_REGEX","result","selfAcceptCode","ctx","routePath","RouteService","simpleGit","now","pluginMdxGit","cache","git","simpleGit","getLastUpdatedTime","path","latest","e","code","id","cleanUrl","MD_REGEX","lastUpdatedTime","rawTime","fs","pluginMdxRawContent","code","id","cleanUrl","MD_REGEX","rawContent","fs","pluginMdx","config","isServer","pluginMdxRollup","pluginMdxHMR","pluginMdxGit","pluginMdxRawContent","pluginUnocss","presetWind","presetAttributify","presetIcons","options","w","unocss_config_default","createVitePlugins","config","isServer","restartServer","pluginsFromIslandPlugins","item","pluginUnocss","unocss_config_default","pluginMdx","pluginIsland","pluginReact","ISLAND_JSX_RUNTIME_PATH","babel_plugin_island_default","pluginSvgr","pluginRoutes"]}