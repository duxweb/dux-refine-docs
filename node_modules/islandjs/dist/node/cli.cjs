"use strict"; function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkM7XPT2F7cjs = require('./chunk-M7XPT2F7.cjs');var _chunkRWA7RXZ7cjs = require('./chunk-RWA7RXZ7.cjs');var Z=_chunkRWA7RXZ7cjs.a.call(void 0, (Yt,yt)=>{yt.exports={name:"islandjs",version:"0.7.31",description:"Vite & Islands architecture SSG framework",packageManager:"pnpm@7.9.2",type:"module",main:"dist/node/index.cjs",module:"dist/node/index.js",types:"dist/node/index.d.ts",bin:{island:"./bin/island.js"},exports:{".":{types:"./dist/index.d.ts",import:"./dist/node/index.js",require:"./dist/node/index.cjs"},"./dist/*":"./dist/*","./package.json":"./package.json","./theme":{types:"./theme.d.ts",default:"./src/theme-default/index.ts"},"./runtime":{type:"./runtime.d.ts",default:"./src/runtime/index.ts"}},scripts:{"pnpm-install":"pnpm install",dev:"tsup --watch --format=cjs,esm",build:"cross-env NODE_ENV=production tsup --format=cjs,esm && tsx scripts/pre-bundle.cts",prepublishOnly:"pnpm build",changelog:"conventional-changelog -p angular -i CHANGELOG.md -s",inspect:"serve .vite-inspect"},keywords:["vite","ssg","island architecture","docs","framework"],author:"Sanyuan0704",license:"MIT",dependencies:{"@babel/core":"7.18.6","@babel/helper-plugin-utils":"7.18.6","@iconify-json/carbon":"1.1.8","@islandjs/plugin-backtop":"0.7.31","@islandjs/plugin-search":"0.7.31","@mdx-js/mdx":"2.1.3","@mdx-js/react":"2.1.3","@mdx-js/rollup":"2","@svgr/core":"6.3.1","@unocss/preset-attributify":"0.45.26","@unocss/preset-icons":"0.45.29","@unocss/preset-wind":"0.45.26","@unocss/vite":"0.45.26","@vitejs/plugin-react":"2.0.1",acorn:"8.8.0","body-scroll-lock":"4.0.0-beta.0",cac:"6.7.12",compression:"1.7.4","copy-to-clipboard":"3.3.2",debug:"4.3.4",esbuild:"0.15.5","fast-glob":"3.2.11","fs-extra":"10.1.0","github-slugger":"1.4.0",hast:"1.0.0","hast-util-from-html":"1.0.0",husky:"8.0.1","lodash-es":"4.17.21","mdast-util-mdxjs-esm":"1.3.0","medium-zoom":"1.0.6",nprogress:"^0.2.0",ora:"6.1.2",picocolors:"1.0.0",polka:"0.5.2",react:"18.2.0","react-dom":"18.2.0","react-helmet-async":"1.3.0","react-router-dom":"6.3.0","rehype-autolink-headings":"6.1.1","rehype-external-links":"2.0.1","rehype-highlight":"5.0.2","rehype-slug":"5.0.1","remark-directive":"2.0.1","remark-frontmatter":"4.0.1","remark-gemoji":"7.0.1","remark-gfm":"3.0.1","remark-mdx-frontmatter":"2.0.3",sass:"1.54.5",shiki:"0.11.1","simple-git":"3.14.1",sirv:"2.0.2",unified:"10.1.2","unist-util-visit":"4.1.1","unist-util-visit-children":"2.0.0",unocss:"0.45.26",vite:"~3.1.4","vite-plugin-inspect":"0.7.4"},devDependencies:{"@babel/preset-react":"7.18.6","@babel/traverse":"^7.19.0","@types/babel__core":"^7.1.19","@types/babel__helper-plugin-utils":"^7.10.0","@types/babel__traverse":"^7.18.1","@types/compression":"^1.7.2","@types/debug":"^4.1.7","@types/fs-extra":"^9.0.13","@types/github-slugger":"^1.3.0","@types/hast":"^2.3.4","@types/koa":"^2.13.5","@types/koa-router":"^7.4.4","@types/lodash-es":"^4.17.6","@types/nprogress":"^0.2.0","@types/polka":"^0.5.4","@types/react":"^18.0.17","@types/react-dom":"^18.0.6","@types/resolve":"^1.20.2","es-module-lexer":"^1.0.3",resolve:"^1.22.1",typescript:"4.7.4"},files:["bin","src/runtime","src/theme-default","dist","vendors","template.html","src/shared/constants","src/shared/utils","src/shared/types","runtime.d.ts","theme.d.ts"],"lint-staged":{"**/*.{js,jsx,tsx,ts,json}":["eslint --fix"]}}});var _path = require('path'); var _path2 = _interopRequireDefault(_path);var _cac = require('cac');var _vite = require('vite');var _fsextra = require('fs-extra'); var _fsextra2 = _interopRequireDefault(_fsextra);var _ora = require('ora'); var _ora2 = _interopRequireDefault(_ora);var _debug = require('debug'); var _debug2 = _interopRequireDefault(_debug);var _perf_hooks = require('perf_hooks');var _picocolors = require('picocolors'); var _picocolors2 = _interopRequireDefault(_picocolors);var _url = require('url');var ut=_debug2.default.call(void 0, "island:build"),I="island:inject",J="\x1B[32m\u2713\x1B[0m",ht="\x1B[31m\u2716\x1B[0m",P=class{#s;#t;#i;#n;#r;#e;#a=new Map;constructor(e,t){this.#t=e,this.#s=this.#t.root,this.#i=t,this.#t.outDir?this.#e=_path2.default.isAbsolute(this.#t.outDir)?this.#t.outDir:_path.join.call(void 0, this.#s,_chunkRWA7RXZ7cjs.o,this.#t.outDir):this.#e=_path.join.call(void 0, this.#s,_chunkRWA7RXZ7cjs.o,"dist")}async build(){let e=_ora2.default.call(void 0, );e.start("Building client + server bundles...");try{let[t,s]=await Promise.all([this.#c(),this.#p()]);e.stopAndPersist({symbol:J}),this.#n=t,this.#r=s,await _fsextra.copy.call(void 0, _path.join.call(void 0, _chunkRWA7RXZ7cjs.n,"ssr","assets"),_path.join.call(void 0, this.#e,"assets")),await _fsextra2.default.writeFile(_path.join.call(void 0, _chunkRWA7RXZ7cjs.n,"package.json"),JSON.stringify({type:"module"}));let i=_path.join.call(void 0, this.#s,_chunkRWA7RXZ7cjs.m);await _fsextra.pathExists.call(void 0, i)&&await _fsextra.copy.call(void 0, i,this.#e);let c=_path.join.call(void 0, _chunkRWA7RXZ7cjs.p),{render:m,routes:o}=await _chunkM7XPT2F7cjs.a.call(void 0, _url.pathToFileURL.call(void 0, c));return[m,o]}catch(t){throw e.stopAndPersist({symbol:ht}),t}}async renderPages(e,t){let s=this.#n.output.find(p=>p.type==="chunk"&&p.isEntry),i=await _fsextra2.default.readFile(_path.join.call(void 0, this.#e,s.fileName),"utf-8"),c=this.#r.output.filter(p=>p.type==="asset"&&p.fileName.endsWith(".css")),{default:m}=await _chunkM7XPT2F7cjs.a.call(void 0, "ora"),o=m();o.start("Rendering page in server side...");let u={code:i,fileName:s.fileName};await Promise.all(t.map(p=>this.#l(e,p.path,u,c))),await this.#d(e,u,c);try{await _fsextra2.default.copy(_chunkRWA7RXZ7cjs.v,this.#e)}catch(p){throw console.log(p),p}o.stopAndPersist({symbol:J})}async end(){process.env.DEBUG||await _fsextra.remove.call(void 0, _path.join.call(void 0, _chunkRWA7RXZ7cjs.n))}async islandsBuild(e){return this.#o(!1,{build:{minify:!process.env.NO_MINIFY,outDir:_path.join.call(void 0, _chunkRWA7RXZ7cjs.n),ssrManifest:!1,rollupOptions:{external:_chunkRWA7RXZ7cjs.s,input:I}},plugins:[{name:"island-inject",enforce:"post",resolveId(t){if(t.includes(_chunkRWA7RXZ7cjs.r)){let[s,i]=t.split(_chunkRWA7RXZ7cjs.r);return this.resolve(s,i,{skipSelf:!0})}if(t===I)return I},load(t){if(t===I)return e},generateBundle(t,s){for(let i in s)s[i].type==="asset"&&delete s[i]}}]})}async#c(){return this.#o(!1,{},"client")}async#p(){return this.#o(!0,{},"ssr")}async#l(e,t,s,i){let c={context:{}},{appHtml:m,propsData:o,islandToPathMap:u,pageData:p}=await e(t,c.context,this.#t.enableSpa),x=Object.keys(u).length>0,y="";if(x&&!this.#t.enableSpa){let n=_chunkM7XPT2F7cjs.b.call(void 0, JSON.stringify(u)),d=this.#a.get(n);if(!d){let O=this.#m(u);d=(async()=>{let b=await this.islandsBuild(O);try{await _fsextra.copy.call(void 0, _path.join.call(void 0, _chunkRWA7RXZ7cjs.n,"assets"),_path.join.call(void 0, this.#e,"assets"))}catch (e2){}return b.output[0].fileName})(),this.#a.set(n,d)}y=await d}let{helmet:a}=c.context,g=_optionalChain([this, 'access', _2 => _2.#t, 'access', _3 => _3.siteData, 'optionalAccess', _4 => _4.head, 'optionalAccess', _5 => _5.map, 'call', _6 => _6(n=>{let[d,O,b]=n,$=Object.keys(O).reduce((st,_)=>`${st} ${_}="${O[_]}"`,"");return b==null?`<${d} ${$} />`:`<${d} ${$}>${b}</${d}>`}), 'access', _7 => _7.join, 'call', _8 => _8(`
`)]),tt=n=>n.replace(/\//g,"_")+".js",j=n=>_chunkRWA7RXZ7cjs.D.call(void 0, n,this.#t.base||"/"),et=`
  <!DOCTYPE html>
  <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width,initial-scale=1">
      <link rel="icon" href="${this.#t.siteData.icon}" type="image/svg+xml"></link>
      ${g||""}
      ${_optionalChain([a, 'optionalAccess', _9 => _9.title, 'optionalAccess', _10 => _10.toString, 'call', _11 => _11()])||""}
      ${_optionalChain([a, 'optionalAccess', _12 => _12.meta, 'optionalAccess', _13 => _13.toString, 'call', _14 => _14()])||""}
      ${_optionalChain([a, 'optionalAccess', _15 => _15.link, 'optionalAccess', _16 => _16.toString, 'call', _17 => _17()])||""}
      ${_optionalChain([a, 'optionalAccess', _18 => _18.style, 'optionalAccess', _19 => _19.toString, 'call', _20 => _20()])||""}
      <script defer src='https://ga.jspm.io/npm:es-module-shims@1.6.0/dist/es-module-shims.js'></script>
      <script type="importmap">
        {
          "imports": {
            ${_chunkRWA7RXZ7cjs.s.map(n=>`"${n}": "${j(tt(n))}"`).join(",")}
          }
        }
      </script>

      ${i.map(n=>`<link rel="stylesheet" href="${j(n.fileName)}">`).join(`
`)}

    </head>
    <body>
      <div id="root">${m}</div>
      ${this.#t.enableSpa?`<script>window.ISLAND_PAGE_DATA=${JSON.stringify(p)};</script>`:""}
      ${!this.#t.enableSpa&&x?`<script id="island-props">${JSON.stringify(o)}</script><script type="module" src="${j(y)}"></script>`:""}
      ${this.#t.enableSpa?`<script type="module" src="${j(s.fileName)}"></script>`:`<script type="module">${s.code}</script>`}
    </body>
  </html>`.trim(),R=(n=>{let d=_chunkRWA7RXZ7cjs.C.call(void 0, this.#t.base||"/");return n.endsWith("/")?`${n}index.html`.replace(d,""):`${n}.html`.replace(d,"")})(t);await _fsextra2.default.ensureDir(_path.join.call(void 0, this.#e,_path.dirname.call(void 0, R))),await _fsextra2.default.writeFile(_path.join.call(void 0, this.#e,R),et)}#d(e,t,s){return this.#l(e,"/404",t,s)}#m(e){return`
      ${Object.entries(e).map(([t,s])=>`import { ${t} } from '${s}';`).join("")}
      window.ISLANDS = {
        ${Object.entries(e).map(([t])=>`${t}`).join(",")}
      };
      window.ISLAND_PROPS = JSON.parse(
        document.getElementById('island-props').textContent
      );
    `}async#o(e,t={},s){let i=async o=>({...t,mode:"production",define:{NODE_ENV:process.env.NODE_ENV||JSON.stringify("production")},root:this.#s,optimizeDeps:{force:_optionalChain([this, 'access', _21 => _21.#i, 'optionalAccess', _22 => _22.force])},plugins:[await _chunkM7XPT2F7cjs.c.call(void 0, this.#t,o),..._optionalChain([t, 'optionalAccess', _23 => _23.plugins])||[]],ssr:{},build:{minify:!process.env.NO_MINIFY&&!o,ssr:o,outDir:o?_path.join.call(void 0, _chunkRWA7RXZ7cjs.n,"ssr"):_nullishCoalesce(this.#e, () => (_path.join.call(void 0, this.#s,_chunkRWA7RXZ7cjs.o))),cssCodeSplit:!1,ssrManifest:!o,emptyOutDir:!0,rollupOptions:{output:{entryFileNames:o?"[name].mjs":void 0,format:"es"},input:o?_chunkRWA7RXZ7cjs.k:_chunkRWA7RXZ7cjs.j},sourcemap:_optionalChain([this, 'access', _24 => _24.#i, 'optionalAccess', _25 => _25.sourcemap]),..._optionalChain([t, 'optionalAccess', _26 => _26.build])}}),c=_perf_hooks.performance.now(),m=await _vite.build.call(void 0, await i(e));if(s){let o=(_perf_hooks.performance.now()-c).toFixed(2);ut(`${s} build time: ${_picocolors2.default.blue(`${o}ms`)}`)}return m}};async function G(r,e){let t=await _chunkRWA7RXZ7cjs.z.call(void 0, r,"build","production",e.config),s=new P(t,e),[i,c]=await s.build();await s.renderPages(i,c),await s.end()}var _fs = require('fs'); var _fs2 = _interopRequireDefault(_fs);var _sirv = require('sirv'); var _sirv2 = _interopRequireDefault(_sirv);var _compression = require('compression'); var _compression2 = _interopRequireDefault(_compression);var _polka = require('polka'); var _polka2 = _interopRequireDefault(_polka);async function Q(r,e){let t=_nullishCoalesce(e.port, () => (4173)),s=_nullishCoalesce(e.host, () => ("localhost")),i=await _chunkRWA7RXZ7cjs.z.call(void 0, r,"serve","production"),c=_optionalChain([i, 'access', _27 => _27.base, 'optionalAccess', _28 => _28.replace, 'call', _29 => _29(/^\//,""), 'access', _30 => _30.replace, 'call', _31 => _31(/\/$/,"")])||"",m=a=>!a.includes("/assets/"),o="";i.outDir?o=_path2.default.isAbsolute(i.outDir)?i.outDir:_path.join.call(void 0, i.root,_chunkRWA7RXZ7cjs.o,i.outDir):o=_path.join.call(void 0, i.root,_chunkRWA7RXZ7cjs.o,"dist");let u=_fs2.default.readFileSync(_path2.default.resolve(o,"./404.html")),p=(a,g)=>{g.statusCode=404,m(a.path)&&g.end(u)},x=_compression2.default.call(void 0, ),y=_sirv2.default.call(void 0, o,{etag:!0,maxAge:31536e3,immutable:!0,setHeaders(a,g){m(g)&&a.setHeader("cache-control","no-cache")}});c?_polka2.default.call(void 0, {onNoMatch:p}).use(c,y,_compression2.default).listen(t,s,a=>{if(a)throw a;console.log(`Built site served at http://${s}:${t}/${c}/
`)}):_polka2.default.call(void 0, {onNoMatch:p}).use(x,y).listen(t,s,a=>{if(a)throw a;console.log(`Built site served at http://${s}:${t}/
`)})}var vt=Z(),w=_cac.cac.call(void 0, "island").version(vt).help();w.option("--config [config]","[string]explicitly specify a config file to use with the --config CLI option");w.command("[root]","start dev server").alias("dev").option("--host <host>","[string] specify hostname").option("-p, --port <port>","[number] specify port").option("--cacheDir [cacheDir]","[string] set the directory of cache").option("--force [force]","[boolean] force the optimizer to ignore the cache and re-bundle").option("-m, --mode <mode>","[string] set env mode").option("-l, --logLevel <level>","[string] info | warn | error | silent").option("--clearScreen","[boolean] allow/disable clear screen when logging").option("--https","[boolean] use TLS + HTTP/2").option("--cors","[boolean] enable CORS").option("--strictPort","[boolean] exit if specified port is already in use").option("--open [path]","[boolean | string] open browser on startup").action(async(r,e)=>{try{r=_path.resolve.call(void 0, r);let t=async()=>{let{createDevServer:s}=await Promise.resolve().then(() => require(`./dev.js?t=${Date.now()}`)),i=await s(r,e,async()=>{await i.close(),await t()});await i.listen(),i.printUrls()};await t()}catch(t){console.log(t),process.exit(1)}});w.command("build [root]","build for production").option("--force [force]","[boolean] force the optimizer to ignore the cache and re-bundle").option("--sourcemap","[boolean] output source maps for build (default: false)").action(async(r,e)=>{try{r=_path.resolve.call(void 0, r),await G(r,e)}catch(t){console.log(t)}});w.command("start [root]","serve for production").option("--port <port>","port to use for serve").option("--host <host>","[string] specify hostname").action(async(r,e)=>{try{r=_path.resolve.call(void 0, r),await Q(r,e)}catch(t){console.log(t)}});w.parse();
//# sourceMappingURL=cli.cjs.map